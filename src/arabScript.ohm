arabScript {
    Program               = Statement*
    Statement             = varKeyword id "="  Exp                                             --varDecInit
                            | varKeyword id                                                     --varDec
                            | Var "=" Exp  														 --assignExp
                         	| SwitchStatement
                            | IfStatement
                            | WhileStatement
                            | ForStatement
                            | Exp
    BeginToEnd			  = "{" Statement* "}"
    IfStatement			  = "لو" "(" Exp ")" BeginToEnd ElseifStatement* ElseStatement?
    ElseifStatement       = "ولو" "(" Exp ")" BeginToEnd
    ElseStatement         = "آخر" BeginToEnd
    WhileStatement        = "بينما" "(" Exp ")" BeginToEnd
    
	ForStatement          = "ل" "(" ForArgs ")" BeginToEnd											 --forArgs
    					  | "ل" "(" Var Var ")" BeginToEnd											 --forOf
    ForArgs               = varKeyword id "=" Exp "؛" Exp "؛" SliceCrement
    SliceCrement          = (id "+=" AddOp | id "-=" AddOp )                                         --binary
                            | (id"++" | id"--" )                                                     --postfix
    SwitchStatement       = "تبديل" "("Var")" "{" Case+ Defaultcase? "}"
    Case             	  = "حالة" Exp ":" Statement*
    Defaultcase           = "خلاف ذلك" ":" Statement*

    Exp                   = Exp logop Joint                                                          --binary
                            | Joint
    Joint                 = Joint relop AddOp                                                        --binary
                            | AddOp
    AddOp                 = AddOp addop Term                                                         --binary
                            | Term
    Term                  = Term mulop Exponential                                                   --binary
                            | Exponential
    Exponential           = Factor "**" Exponential                                                   --binary
                            | Factor
    Factor                = ("-") Factor                                                           --negation
                            | ("!") Factor                                                           --boolNegation
                            | "(" Exp ")"                                                            --parens
                            | numlit
                            | stringlit
                            | boollit
                            | Var
    digit				  += "١"|"٧"|"٦"|"٥"|"٤"|"٣"|"٢"|"٩"|"٠"
    numlit                = digit+ "." digit+                                                        --float
                            | digit+                                                                 --int
    boollit               = "صح" | "خطا"
    stringlit             = "\"" char* "\""
    char                  = "\\n"
                            | "\\'"
                            | "\\\""
                            | "\\\\"
                            | "\\u{" hexDigit hexDigit? hexDigit? hexDigit? hexDigit? hexDigit?  "}"  --hex
                            | ~"\"" ~"\\" any
    Var                   = id
    varKeyword           = "دع" | "ثابت" | "متغير"
    keyword               = varKeyword | "لو" | "ولو" | "آخر" | "ل" | "بينما" | "تبديل" | "حالة" | "خلاف ذلك"
    id                    = ~keyword letter (alnum | "&")*

    space                 += "//" (~"\n" any)* ("\n" | end)                                               --comment
    logop                 = "&&" | "||"
    relop                 = "<=" | "<" | "==" | "!=" | ">=" | ">"
    addop                 = "+" | "-"
    mulop                 = "*"| "/"| "%"
  }